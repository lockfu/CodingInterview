/**
	 * 返回链表倒数第k个节点
	 * 
	 * 解法1：  遍历链表求长度  第len-k个就是
	 * @param head
	 * @param k
	 * @return
	 */
	public static Node nthToLast(Node head, int k){
		if(head == null || k <= 0)
			return null;
		Node tmp = head;
		int len = 0;
		while(tmp != null){
			len++;
			tmp = tmp.next;
		}
		if(len < k)
			return null;
		for(int i = 0; i<len-k; i++){
			head = head.next;
		}
		return head;
	}
	
	/**
	 * 迭代
	 * @param head
	 * @param k
	 * @return
	 */
	public static Node nthToLast2(Node head, int k){
		if(head == null || k <= 0)
			return null;
		Node p1 =  head;
		Node p2 =  head;
		for(int i = 0; i<k-1; i++){
			if(p2 == null) return null;
			p2 = p2.next;
		}
		while(p2.next != null){
			p1 = p1.next;
			p2 = p2.next;
		}
		return p1;
	}
	
	/**
	 * 递归
	 * @param head
	 * @param k
	 * @return
	 */
	class IntWapper{
		public int value = 0;
	}
	public static Node nthToLast1(Node head, int k, IntWapper i){
		if(head == null)
			return null;
		Node node = nthToLast1(head.next, k, i);
		i.value = i.value + 1;
		if(i.value == k)
			return head;
		return node;
	}
	
	
